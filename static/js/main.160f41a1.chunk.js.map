{"version":3,"sources":["views/App.module.sass","components/Item.module.sass","plugins/scroll.ts","components/Item.tsx","components/FirstElement.tsx","components/MultipleElements.tsx","views/App.tsx","index.tsx"],"names":["module","exports","Direction","Item","index","style","props","className","classnames","classes","container","text","createViewportLayout","viewportWidth","viewportHeight","width","height","overflow","willChange","createScrollLayout","size","itemsCount","direction","horizon","vertical","TypeError","createItemLayout","offset","translateType","sizeType","subSizeType","useHorizontalScroll","ref","useRef","useState","scrollLeft","setScrollLeft","useEffect","scrollContainer","current","onscroll","evt","currentTarget","requestAnimationFrame","SingleElement","count","Math","floor","onScroll","MultipleElements","render","firstVisibleNodeIndex","visibleOffset","numbersOfVisibleNodes","useMemo","numbers","ceil","childrenQueue","Array","fill","map","Children","key","Sample","title","children","sample","subtitle","App","title__link","href","target","rel","body","FirstElement","footer","Date","getFullYear","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.160f41a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container___VpkU\",\"body\":\"App_body__1bXN7\",\"footer\":\"App_footer__11trc\",\"title\":\"App_title__19eqv\",\"title__link\":\"App_title__link__2-NwP\",\"subtitle\":\"App_subtitle__m1KxF\",\"sample\":\"App_sample__3ZM6O\",\"sample__container\":\"App_sample__container__2BvjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Item_container__3cdW-\",\"text\":\"Item_text__2dJWT\"};","import React, { useRef, useState, useEffect } from 'react'\r\n\r\nexport enum Direction {\r\n  vertical = 'vertical',\r\n  horizon = 'horizon'\r\n}\r\n\r\n/**\r\n * calculate visible area size\r\n * @param viewportWidth viewport width\r\n * @param viewportHeight viewport height\r\n */\r\nexport function createViewportLayout(\r\n  viewportWidth: number,\r\n  viewportHeight: number\r\n): React.CSSProperties {\r\n  return {\r\n    width: viewportWidth,\r\n    height: viewportHeight,\r\n    overflow: 'auto',\r\n    willChange: 'transform' // create a new layer for reducing repaint and reflow\r\n  }\r\n}\r\n\r\n/**\r\n * calculate the entire scrolling area size, on the other hand, it's sum size of\r\n * all elements\r\n * @param size single element size\r\n * @param itemsCount numbers of all items\r\n * @param direction vertical or horizontal scrolling\r\n */\r\nexport function createScrollLayout(\r\n  size: number,\r\n  itemsCount: number,\r\n  direction: Direction\r\n): React.CSSProperties {\r\n  if (direction === Direction.horizon) {\r\n    return {\r\n      width: size * itemsCount + 'px',\r\n      height: '100%'\r\n    }\r\n  }\r\n\r\n  if (direction === Direction.vertical) {\r\n    return {\r\n      width: '100%',\r\n      height: size * itemsCount + 'px'\r\n    }\r\n  }\r\n\r\n  throw new TypeError(`Unexpected layout, we got ${direction}`)\r\n}\r\n\r\n/**\r\n * calculate the first element should offset distance\r\n */\r\nexport function createItemLayout(\r\n  offset: number,\r\n  size: number,\r\n  direction: Direction\r\n): React.CSSProperties {\r\n  let translateType: 'X' | 'Y' = 'X'\r\n  let sizeType: 'width' | 'height' = 'width'\r\n  let subSizeType: 'width' | 'height' = 'height'\r\n  if (direction === Direction.vertical) {\r\n    translateType = 'Y'\r\n    sizeType = 'height'\r\n    subSizeType = 'width'\r\n  }\r\n  return {\r\n    [sizeType]: size,\r\n    [subSizeType]: '100%',\r\n    // transform would occur GPU rendering (better rendering performance)\r\n    transform: `translate${translateType}(${offset}px)`\r\n  }\r\n}\r\n\r\nexport function useHorizontalScroll<E extends HTMLElement = HTMLElement>() {\r\n  const ref = useRef<E>(null)\r\n  const [scrollLeft, setScrollLeft] = useState(0)\r\n  const onscroll: (evt: React.UIEvent<E, Event>) => void = evt => {\r\n    // cache result because of React.js event pooling\r\n    // https://reactjs.org/docs/events.html#event-pooling\r\n    const offset = evt.currentTarget.scrollLeft\r\n\r\n    // use requestAnimationFrame to throttle calling\r\n    requestAnimationFrame(() => setScrollLeft(offset))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const scrollContainer = ref.current\r\n    if (!scrollContainer)\r\n      throw TypeError('Should has a scroll container element.')\r\n\r\n    setScrollLeft(scrollContainer.scrollLeft)\r\n    return () => {}\r\n  }, [])\r\n\r\n  return {\r\n    ref,\r\n    scrollLeft,\r\n    onscroll\r\n  }\r\n}\r\n","import React from 'react'\r\nimport classnames from 'classnames'\r\nimport classes from './Item.module.sass'\r\n\r\nconst Item: React.FC<{\r\n  index: number\r\n  style: React.CSSProperties\r\n  [key: string]: any\r\n}> = ({ index, style, ...props }) => {\r\n  return (\r\n    <div\r\n      {...props}\r\n      style={style}\r\n      className={classnames('v-item', classes.container)}\r\n    >\r\n      <span className={classes.text}>index: {index}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Item\r\n","import React from 'react'\r\nimport Item from './Item'\r\nimport {\r\n  Direction,\r\n  createViewportLayout,\r\n  createScrollLayout,\r\n  createItemLayout,\r\n  useHorizontalScroll\r\n} from '../plugins/scroll'\r\n\r\nconst direction = Direction.horizon\r\n\r\nconst SingleElement: React.FC<{\r\n  width: number // viewport width\r\n  height: number // viewport height\r\n  size: number // single element size\r\n  count: number // numbers of all items\r\n}> = ({ width, height, size, count }) => {\r\n  const { ref, onscroll, scrollLeft } = useHorizontalScroll<HTMLDivElement>()\r\n\r\n  // which element is the first visible element in the whole content list\r\n  const startNodeIndex = Math.floor(scrollLeft / size)\r\n\r\n  // How far away is between the start edge of scrolling container and the\r\n  // first visible element\r\n  const offset = startNodeIndex * size\r\n\r\n  // viewport\r\n  return (\r\n    <div\r\n      style={createViewportLayout(width, height)}\r\n      onScroll={onscroll}\r\n      ref={ref}\r\n      className=\"v-first-element__viewport\"\r\n    >\r\n      {/* scroll area: render original scroll area size for correct scrollbar size */}\r\n      <div\r\n        style={createScrollLayout(size, count, direction)}\r\n        className=\"v-first-element__scroll\"\r\n      >\r\n        {/* single child element */}\r\n        <Item index={-1} style={createItemLayout(offset, size, direction)}>\r\n          items\r\n        </Item>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SingleElement\r\n","import React, { useMemo } from 'react'\r\nimport {\r\n  createItemLayout,\r\n  Direction,\r\n  createViewportLayout,\r\n  createScrollLayout,\r\n  useHorizontalScroll\r\n} from '../plugins/scroll'\r\n\r\nconst direction = Direction.horizon\r\n\r\nconst MultipleElements: React.FC<{\r\n  width: number\r\n  height: number\r\n  size: number\r\n  count: number\r\n  render: React.ComponentType<any>\r\n}> = ({ width, height, size, count, render }) => {\r\n  const { ref, onscroll, scrollLeft } = useHorizontalScroll<HTMLDivElement>()\r\n\r\n  // Which element is the first visible element in the whole content list\r\n  const firstVisibleNodeIndex = Math.floor(scrollLeft / size)\r\n\r\n  // How far away is between the start edge of scrolling container and the\r\n  // first visible element\r\n  const visibleOffset = firstVisibleNodeIndex * size\r\n\r\n  // How many items\r\n  const numbersOfVisibleNodes = useMemo(() => {\r\n    const numbers = Math.ceil(width / size)\r\n    return numbers + (firstVisibleNodeIndex + numbers <= size ? 1 : 0)\r\n  }, [firstVisibleNodeIndex, size, width])\r\n\r\n  // all visible child items\r\n  const childrenQueue: React.ComponentType<any>[] = useMemo(\r\n    () => new Array(numbersOfVisibleNodes).fill(render),\r\n    [numbersOfVisibleNodes, render]\r\n  )\r\n  return (\r\n    <div\r\n      style={createViewportLayout(width, height)}\r\n      onScroll={onscroll}\r\n      ref={ref}\r\n      className=\"v-mul-element__viewport\"\r\n    >\r\n      {/* scroll area: render original scroll area size for correct scrollbar size */}\r\n      <div\r\n        style={createScrollLayout(size, count, direction)}\r\n        className=\"v-mul-element__scroll\"\r\n      >\r\n        {childrenQueue.map((Children, index) => (\r\n          <Children\r\n            key={index}\r\n            index={firstVisibleNodeIndex + index}\r\n            style={createItemLayout(visibleOffset, size, direction)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MultipleElements\r\n","import React from 'react'\nimport classes from './App.module.sass'\n\n// How does scrolling area scroll virtually\nimport FirstElement from '../components/FirstElement'\n// How does element scroll virtually\nimport MultipleElements from '../components/MultipleElements'\nimport Item from '../components/Item'\n\nconst Sample: React.FC<{ title: string }> = ({ title, children }) => (\n  <div className={classes.sample}>\n    <h2 className={classes.subtitle}>{title}</h2>\n\n    {children}\n  </div>\n)\n\nfunction App() {\n  return (\n    <div className={classes.container}>\n      {/* header */}\n      <h1 className={classes.title}>\n        <a\n          className={classes.title__link}\n          href=\"http://github.com/lbwa/how-virtual-scroll-works\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          How virtual scroll works\n        </a>\n      </h1>\n\n      {/* body */}\n      <div className={classes.body}>\n        <Sample title=\"How does scrolling area scroll virtually\">\n          <FirstElement width={500} height={100} size={90} count={100} />\n        </Sample>\n\n        <Sample title=\"Horizontal virtual scroll\">\n          <MultipleElements\n            width={500}\n            height={100}\n            size={90}\n            count={100}\n            render={Item}\n          />\n        </Sample>\n      </div>\n\n      <footer className={classes.footer}>\n        Copyright &copy; {new Date().getFullYear()}&nbsp;\n        <a href=\"http://set.sh\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Bowen Liu\n        </a>\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.sass'\nimport App from './views/App'\n// import * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}